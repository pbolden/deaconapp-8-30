@using DeaconCCGManagement.enums
@using DeaconCCGManagement.Helpers
@using DeaconCCGManagement.Models
@using Microsoft.Security.Application
@model DeaconCCGManagement.ViewModels.EditMemberViewModel

@{
    ViewBag.Title = "Edit Member";
}

@section styles {
    @Styles.Render("~/Content/bootstrap-datetimepicker.min.css")
}



@Html.Partial("_Breadcrumbs", "Edit Member")

<h2>@ViewBag.Title&nbsp;<small>@Model.FirstName @Model.LastName</small></h2>

@if (ViewBag.Message != null)
{
    <div class="alert alert-info">
        <p>
            @ViewBag.Message
        </p>
    </div>
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="well well-md">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ReturnUrl)
            @Html.HiddenFor(model => model.CcgMemberId)

            <div class="row-fluid">
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.LastName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.LastName, "", new {@class = "text-danger"})
                    </div>
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.FirstName, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.FirstName, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Title, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Title, "", new {@class = "text-danger"})
                    </div>
                    @Html.LabelFor(model => model.Suffix, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Suffix, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Suffix, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Address, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.Address, "", new {@class = "text-danger"})
                    </div>
                    @Html.LabelFor(model => model.City, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="form-group">
                    @Html.LabelFor(model => model.State, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.State, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.State, "", new {@class = "text-danger"})
                    </div>
                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.ZipCode, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.ZipCode, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.PhoneNumber, new {htmlAttributes = new {@class = "form-control phoneMask"}})
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new {@class = "text-danger"})
                    </div>
                    @Html.LabelFor(model => model.CellPhoneNumber, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.CellPhoneNumber, new {htmlAttributes = new {@class = "form-control phoneMask"}})
                        @Html.ValidationMessageFor(model => model.CellPhoneNumber, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            <div class="row-fluid">
                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-2" style="padding: 0 0 0 15px">
                        <div class='input-group date datepicker'>
                            <span class="input-group-addon addOn" style="width: 120px">
                                @Html.EditorFor(model => model.BirthDate, new {htmlAttributes = new {@class = "form-control dateMask"}})

                                <button class="btn btn-default calendar" type="button">
                                    <span class="fa fa-calendar"></span>
                                </button>

                            </span>
                            @Html.ValidationMessageFor(model => model.BirthDate, "", new {@class = "text-danger"})
                        </div>
                    </div>
                    @Html.LabelFor(model => model.AnniversaryDate, htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-2" style="padding: 0 0 0 15px;">
                        <div class='input-group date datepicker'>
                            <span class="input-group-addon addOn" style="width: 120px">
                                @Html.EditorFor(model => model.AnniversaryDate, new {htmlAttributes = new {@class = "form-control dateMask"}})

                                <button class="btn btn-default calendar" type="button">
                                    <span class="fa fa-calendar"></span>
                                </button>

                            </span>
                            @Html.ValidationMessageFor(model => model.AnniversaryDate, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>


            <div class="row-fluid">

                <div class="form-group">
                    @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.EmailAddress, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.EmailAddress, "", new {@class = "text-danger"})
                    </div>

                    <div class="hidden-sm hidden-xs">
                        @Html.LabelFor(model => model.IsMemberActive, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-1">
                            @Html.CheckBoxFor(model => model.IsMemberActive)
                            @Html.ValidationMessageFor(model => model.IsMemberActive, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="visible-sm visible-xs">
                        @Html.LabelFor(model => model.IsMemberActive, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-1">
                            <div style="margin-left: 5em">
                                @Html.CheckBoxFor(model => model.IsMemberActive)
                            </div>
                            @Html.ValidationMessageFor(model => model.IsMemberActive, "", new {@class = "text-danger"})
                        </div>
                    </div>

                </div>
            </div>


            <div class="row-fluid">
                <div class="form-group">
                    @Html.Label("CCG", htmlAttributes: new {@class = "control-label col-md-2"})
                    <div class="col-md-4">
                        @Html.DropDownListFor(model => model.CcgId, ViewBag.CCGs as SelectList, new {@class = "form-control", style = "margin-top: 3px"})
                        @Html.ValidationMessageFor(model => model.CcgId, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div>

            @{
                string submitButtonText = "Send Change Request";

            }
            <div class="alert alert-info">
                Submitting this form will <span style="text-decoration: underline;">not</span> immediately update this member's data.
                This will send a change request to the change request manager.
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="@submitButtonText" class="btn btn-default"/>
                </div>
            </div>
        </div>
    </div>
                }


    @Html.Partial("_BackToListLink")



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/moment.min.js")
    @Scripts.Render("~/Scripts/bootstrap-datetimepicker.min.js")
    @Scripts.Render("~/Scripts/App/DatePicker.js")
    @Scripts.Render("~/Scripts/jquery.maskedinput.js")
    @Scripts.Render("~/Scripts/App/DateMask.js")
    @Scripts.Render("~/Scripts/App/PhoneMask.js")
    @Scripts.Render("~/Scripts/App/GetBackToListUrl.js")
    @Scripts.Render("~/Scripts/App/SetBackToListUrlAsReturnUrl.js")
}
