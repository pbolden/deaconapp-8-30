
@model DeaconCCGManagement.ViewModels.CreateContactRecordViewModel

@{
    ViewBag.Title = "Create New Contact Record";
    string ControllerName = "ContactRecords";
    string listViewName = "Contact Records";
}

@section styles {
   @Styles.Render("~/Content/bootstrap-datetimepicker.min.css") 
}

@Html.Partial("_Breadcrumbs", "Create Record")

<h2>New Contact</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => Model.CCGMemberId)
  
    @Html.HiddenFor(model => model.ReturnUrl)

    <div class="well well-md">
        <div class="form-horizontal">
            <h4>New Contact Record for @Model.MemberFullName</h4>
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})

            <!--contact date-->
            <div class="form-group">
                @Html.LabelFor(model => model.ContactDate, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-3" style="padding: 0 0 0 15px">
                    <div class="input-group date datepicker">
                        <span class="input-group-addon addOn" style="width: 150px">
                            @Html.EditorFor(model => model.ContactDate, new { htmlAttributes = new { @class = "form-control dateMask" } })
                            <button class="btn btn-default calendar" type="button">
                                <span class="fa fa-calendar"></span>
                            </button>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.ContactDate, "", new {@class = "text-danger"})
                </div>
            </div><!-- / contact date-->

            <!--duration-->
            <div class="form-group">
                @Html.LabelFor(model => model.Duration, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Duration, new {htmlAttributes = new {@class = "form-control durationMask", id="duration"}})
                    @Html.ValidationMessageFor(model => model.Duration, "", new {@class = "text-danger"})
                </div>
            </div><!-- / duration-->

            <!--pass along check box-->
            <div class="form-group">
                @Html.LabelFor(model => model.PassAlong, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.PassAlong, new {id = "chkbxPassAlong"})
                        @Html.ValidationMessageFor(model => model.PassAlong, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div><!-- / pass along check box-->

            <!--message to pastor-->
            <div id="msgPassAlong" class="form-group" hidden="hidden">
                @Html.LabelFor(model => model.PassAlongComments, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PassAlongComments, new {htmlAttributes = new {@class = "form-control", id = "msgPassAlongTextArea"}})
                    @Html.ValidationMessageFor(model => model.PassAlongComments, "", new {@class = "text-danger"})
                </div>
            </div><!-- / message to pastor-->

            <!--subject-->
            <div class="form-group">
                @Html.LabelFor(model => model.Subject, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Subject, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Subject, "", new {@class = "text-danger"})
                </div>
            </div><!-- / subject-->

            <!--private check box-->
            <div class="form-group">
                @Html.LabelFor(model => model.Private, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.Private)
                        @Html.ValidationMessageFor(model => model.Private, "", new {@class = "text-danger"})
                    </div>
                </div>
            </div><!-- / private check box-->

            <!--comments-->
            <div class="form-group">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Comments, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Comments, "", new {@class = "text-danger"})
                </div>
            </div><!-- / comments-->

            <!--contact types-->
            <div class="form-group">
                @Html.LabelFor(model => model.ContactTypes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ContactTypeId, Model.ContactTypes, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactTypes, "", new { @class = "text-danger" })
                </div>
            </div><!-- / contact types-->

            <!--submit button-->
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default"/>
                </div>
            </div><!-- / submit button-->
        </div>
    </div><!-- / well-->

        }


    @Html.Partial("_BackToListLink")


@section Scripts {
    @Scripts.Render("~/Scripts/moment.min.js")
    @Scripts.Render("~/Scripts/bootstrap-datetimepicker.min.js")
    @Scripts.Render("~/Scripts/App/DatePicker.js")
    @Scripts.Render("~/Scripts/jquery.maskedinput.js")
    @Scripts.Render("~/Scripts/App/DateMask.js")
    @Scripts.Render("~/Scripts/App/DurationMask.js")
    @Scripts.Render("~/Scripts/App/ShowHidePassAlongComments.js")
    @Scripts.Render("~/Scripts/App/GetBackToListUrl.js")
    @Scripts.Render("~/Scripts/App/SetBackToListUrlAsReturnUrl.js")

    <script type="text/javascript">
            $(function() {
                $('#duration').focus();
            });
    </script>


}


