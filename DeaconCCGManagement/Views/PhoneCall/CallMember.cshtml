@using DeaconCCGManagement.ViewModels
@model PhoneCallContact

@{
    ViewBag.Title = "Call Member";
}

@section styles {
    @Styles.Render("~/Content/bootstrap-datetimepicker.min.css")
}

@Html.Partial("_Breadcrumbs", "Call Member")

<h2>Enter Phone Call Information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.MemberId)
    @Html.HiddenFor(m => m.MemberFullName)

    <div class="well well-md">
        <div class="form-horizontal">
            <hr />

            @*Success message if phone contact has been saved.*@
            @if (@ViewBag.ContactSaved != null && @ViewBag.ContactSaved)
            {
                <h2 class="text-success">Phone call contact has been saved.</h2>
            }

            @*Name and phone number will not display after contact has been saved.*@
            @if (@ViewBag.ContactSaved == null || !@ViewBag.ContactSaved)
            {
                <h4>@Model.MemberFullName</h4>
                <p>
                    @Html.Label("Click to Call:") &nbsp;
                    <a href="@Model.HrefPhoneNumberLink" id="phoneLink">@Model.PhoneNumber</a>
                </p>
            }

            <!--contact date-->
            <div class="form-group">
                @Html.LabelFor(model => model.CallDateTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-3" style="padding: 0 0 0 15px">
                    <div class="input-group date datepicker">
                        <span class="input-group-addon addOn" style="width: 150px">
                            @Html.EditorFor(model => model.CallDateTime, new { htmlAttributes = new { @class = "form-control dateMask" } })
                            <button class="btn btn-default calendar" type="button">
                                <span class="fa fa-calendar"></span>
                            </button>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.CallDateTime, "", new { @class = "text-danger" })
                </div>
            </div><!-- / contact date-->

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PassAlong, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.PassAlong)
                        @Html.ValidationMessageFor(model => model.PassAlong, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactTypes, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.ContactTypeId, Model.ContactTypes, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ContactTypes, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", id = "comments" })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CallDuration, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CallDuration, new { htmlAttributes = new { @class = "form-control durationMask" } })
                    @Html.ValidationMessageFor(model => model.CallDuration, "", new { @class = "text-danger" })
                </div>
            </div>

            @*No 'Save' button if phone contact has already been saved.*@
            @if (@ViewBag.ContactSaved == null || !@ViewBag.ContactSaved)
            {

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            }

        </div>
    </div>
}

    @Html.Partial("_BackToListLink")

<p></p>
@*<p>
    <input id="btnTest" type="tel" value="TEST" class="btn btn-default" />
</p>*@

@section Scripts {

    @Scripts.Render("~/Scripts/moment.min.js")
    @Scripts.Render("~/Scripts/bootstrap-datetimepicker.min.js")
    @Scripts.Render("~/Scripts/App/DatePicker.js")
    @Scripts.Render("~/Scripts/jquery.maskedinput.js")
    @Scripts.Render("~/Scripts/App/DateMask.js")
    @Scripts.Render("~/Scripts/App/DurationMask.js")
    @Scripts.Render("~/Scripts/App/GetBackToListUrl.js")

    <script type="text/javascript">
        $(function() {
            $('#comments').focus();
        });
    </script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#btnTest").on("click", function () {

                alert("click event invoked");

                //$("#phoneLink")

                //$.get("tel:+15559991234");
                //$.url("tel:+15559991234");
            });

        });
    </script>
}


