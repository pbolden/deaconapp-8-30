@model DeaconCCGManagement.ViewModels.AnnouncementViewModel

@{
    ViewBag.Title = "Create New Deacon Announcement";

    // Same view for create and edit
    string headerText = Model.EditAnnouncement ? "Edit Deacon Announcement" : "Create New Deacon Announcement";
    string breadCrumbText = Model.EditAnnouncement ? "Edit Announcement" : "Create Announcement";
    string h4Text = Model.EditAnnouncement ? "Edit Announcement" : "Enter New Announcement";
}

@Html.Partial("_Breadcrumbs", breadCrumbText)


@section styles{
    @Styles.Render("~/Scripts/ckeditor/contents.css")
    @Styles.Render("~/Content/bootstrap-datetimepicker.min.css")
}



<h2>@headerText</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@h4Text</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        
        <div class="form-group">
            @Html.LabelFor(model => model.SendEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SendEmail)
                    @Html.ValidationMessageFor(model => model.SendEmail, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SendSMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SendSMS)
                    @Html.ValidationMessageFor(model => model.SendSMS, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <!--expiration date-->
        <div class="form-group">
            @Html.LabelFor(model => model.ExpirationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3" style="padding: 0 0 0 15px">
                <div class="input-group date datepicker">
                    <span class="input-group-addon addOn" style="width: 150px">
                        @Html.EditorFor(model => model.ExpirationDate, new { htmlAttributes = new { @class = "form-control dateMask" } })
                        <button class="btn btn-default calendar" type="button">
                            <span class="fa fa-calendar"></span>
                        </button>
                    </span>
                </div>
                @Html.ValidationMessageFor(model => model.ExpirationDate, "", new { @class = "text-danger" })
            </div>
        </div><!-- / expiration date-->

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.AnnouncementHtml, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.AnnouncementHtml, new { @class = "ckeditor", id = "editor1" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save Announcement" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section scripts{
    @Scripts.Render("~/Scripts/App/GetBackToListUrl.js")
    @Scripts.Render("~/Scripts/ckeditor/ckeditor.js")
    @Scripts.Render("~/Scripts/moment.min.js")
    @Scripts.Render("~/Scripts/bootstrap-datetimepicker.min.js")
    @Scripts.Render("~/Scripts/App/DatePicker.js")
    @Scripts.Render("~/Scripts/jquery.maskedinput.js")
    @Scripts.Render("~/Scripts/App/DateMask.js")

}