@model DeaconCCGManagement.ViewModels.NotificationViewModel
@{
    ViewBag.Title = "Deacons Announcement";
}

<h2>Deacons Announcement</h2>

<h3>Send a message to all deacons.</h3>

<br />

<div class="form-group">
    @using (@Html.BeginForm("SendDeaconsTextMessage", "DeaconAnnouncement", FormMethod.Get))
    {
        <button class="btn btn-success" type="submit">
            Sent Email <span class="glyphicon glyphicon-envelope"></span>
        </button>
    }
</div>

<div class="form-group">
    @using (@Html.BeginForm("SendDeaconsTextMessage", "DeaconAnnouncement", FormMethod.Get))
    {
        <button class="btn btn-success" type="submit">
            Sent Text Message <span class="glyphicon glyphicon-phone"></span>
        </button>
    }
</div>

<br />

@using (Html.BeginForm("SendDeaconsNotification", "DeaconAnnouncement", FormMethod.Post)) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Send a Push Notification to All Deacons</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Message, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Url, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Url, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Url, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LinkText, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinkText, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinkText, "", new { @class = "text-danger" })
            </div>
        </div>

          <div class="form-group">
            @Html.LabelFor(model => model.NotifyType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.NotifyType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NotifyType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Send Notification" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

